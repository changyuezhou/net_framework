# 控制器配置信息
ctrl {
  # 网络接入端配置
  ap {
    groupid = 1 # 网络接入端 AP 的ID，必须为 1
    bin = "nsf_ap"  # 网络接入端执行程序路径
    etc = "ap.conf" # 网络接入端配置文件路径
    count = 1 # 网络接入端进程数量，必须为 1
    interval = 1 # 网络接入端进程 心跳间隔，超过间隔时间未上报，控制进程会重新启动网络接入端进程
  }

  # 工作进程
  jobs {
    # 配置多个工作组进程
    pipe = [
      {
        groupid = 2 # 工作进程ID
        bin = "nsf_job" # 工作进程执行程序路径
        etc = "job.conf" # 工作进程配置文件路径
        count = 10 # 工作进程数量
        interval = 5 # 工作进程心跳间隔，超过间隔时间未上报，控制进程会重新启动工作进程
      },
      {
        groupid = 3 # 工作进程ID
        bin = "nsf_job" # 工作进程执行程序路径
        etc = "job.conf" # 工作进程配置文件路径
        count = 3 # 工作进程数量
        interval = 5 # 工作进程心跳间隔，超过间隔时间未上报，控制进程会重新启动工作进程
      }
    ]
  }

  # 工具类程序配置
  tools {
    # 工具类执行程序列表
    items = [
      {
        bin = "" # 工具类程序执行路径
        etc = "" # 工具类程序配置文件路径
      },
      {
        bin = "" # 工具类程序执行路径
        etc = "" # 工具类程序配置文件路径
      }
    ]
  }
}

# 日志
log {
  # 日志全局配置，
  module = FFFFFFFFFFFFFFFF # 控制模块日志开放功能
  level = WARN # DEBIG, INFO, WARN, ERROR, FATAL  日志级别
  level.exact = Y # Y or N  精确落地日志标识
  format = BASIC # BASIC 日志样式,目前只支持 BASIC
  format.mode = FULL # NONE, MIN, BRIEF, LOCATE, FULL 日志模式，FULL 模式包含时间，进程号，行数等全部信息,NONE 模式只包含信息

  # 日志实例
  handler = [
    {
      name = file # clog, cerr, file, udp, tcp, unix_stream, unix_dgram 日志类型，支持标准流，文件，网络
      module = FFFFFFFFFFFFFFFF  # 控制模块日志开放功能
      level = INFO # DEBUG, INFO, WARN, ERROR, FATAL 日志级别
      level.exact = N # Y or N 精确落地日志标识
      format = BASIC # BASIC 日志样式,目前只支持 BASIC
      format.mode = FULL # NONE, MIN, BRIEF, LOCATE, FULL 模式包含时间，进程号，行数等全部信息,NONE 模式只包含信息
      file.name = /data/logs/dbc/nsf/ap.log # 文件路径
      file.size = 10 # 文件大小 单位 M
      file.muti.input = N # 多进程同时写一个日志文件标识
      file.flush = N # 实时刷新标识
    }
  ]
}